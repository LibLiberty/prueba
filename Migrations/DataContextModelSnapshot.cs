// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using prueba.Data;

namespace prueba.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("prueba.Models.Classroom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Classroom");
                });

            modelBuilder.Entity("prueba.Models.Learn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Learn");
                });

            modelBuilder.Entity("prueba.Models.Matter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClassroomId")
                        .HasColumnType("int");

                    b.Property<int>("IdClassroom")
                        .HasColumnType("int");

                    b.Property<int>("IdLearn")
                        .HasColumnType("int");

                    b.Property<int?>("LearnId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Notes")
                        .HasColumnType("int");

                    b.Property<string>("Topic")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClassroomId");

                    b.HasIndex("LearnId");

                    b.ToTable("Matter");
                });

            modelBuilder.Entity("prueba.Models.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Course")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LearnId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LearnId");

                    b.ToTable("Professors");
                });

            modelBuilder.Entity("prueba.Models.Teach", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MatterId")
                        .HasColumnType("int");

                    b.Property<int>("ProfessorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MatterId");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Teaches");
                });

            modelBuilder.Entity("prueba.Models.Matter", b =>
                {
                    b.HasOne("prueba.Models.Classroom", "Classroom")
                        .WithMany("Matter")
                        .HasForeignKey("ClassroomId");

                    b.HasOne("prueba.Models.Learn", "Learn")
                        .WithMany()
                        .HasForeignKey("LearnId");

                    b.Navigation("Classroom");

                    b.Navigation("Learn");
                });

            modelBuilder.Entity("prueba.Models.Professor", b =>
                {
                    b.HasOne("prueba.Models.Learn", null)
                        .WithMany("Professor")
                        .HasForeignKey("LearnId");
                });

            modelBuilder.Entity("prueba.Models.Teach", b =>
                {
                    b.HasOne("prueba.Models.Matter", "Matter")
                        .WithMany("Teach")
                        .HasForeignKey("MatterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("prueba.Models.Professor", "Professor")
                        .WithMany("Teaches")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Matter");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("prueba.Models.Classroom", b =>
                {
                    b.Navigation("Matter");
                });

            modelBuilder.Entity("prueba.Models.Learn", b =>
                {
                    b.Navigation("Professor");
                });

            modelBuilder.Entity("prueba.Models.Matter", b =>
                {
                    b.Navigation("Teach");
                });

            modelBuilder.Entity("prueba.Models.Professor", b =>
                {
                    b.Navigation("Teaches");
                });
#pragma warning restore 612, 618
        }
    }
}
